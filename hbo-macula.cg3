DELIMITERS = "<svb>" ;
OPTIONS += addcohort-attach ;

# manual-arcs tags
# - _override: don't apply SETPARENT (_) ... ; rules
# - actuallyinf: this אמר is not לאמר SCONJ
# - quoteoverride: don't edit the head of this לאמר (set on prep)
# - longlist: move @conj children of this up (list crossing verses)

####################
# Boundaries
####################

LIST PB = pb ;
LIST CB = cb ;
LIST SB = sb ;
LIST SVB = svb ;
LIST BD = pb cb sb svb ;

LIST PhraseNum = pn0 pn1 pn2 pn3 pn4 pn5 pn6 pn7 pn8 pn9 ;
LIST ClauseNum = cn0 cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 ;
LIST SentNum = sn0 sn1 sn2 sn3 sn4 sn5 sn6 sn7 sn8 sn9 ;
LIST VerseNum = vn0 vn1 vn2 vn3 vn4 vn5 vn6 vn7 vn8 vn9 ;

####################
# POS
####################

LIST Det = art ;
LIST Pr = prep ;
LIST Noun = subs nmpr (verb ptcp) (verb ptca) ;
LIST RelMark = ("אשׁר" conj @mark) ("ה" conj CP Rela) ("שׁ" conj) ;
LIST PRON = prde prps prn ;
LIST ADV = advb nega ;
LIST SCONJ = "כי" "פן" "אשׁר" "אם" "שׁ" "ה" "לולא" "לו" "זו" (conj retag:prep) (conj retag:subs ppre) ExtPos=SCONJ ;

####################
# Subcategories
####################

LIST Participle = ptca ptcp ;

####################
# Text-Fabric labels
####################

# Complete

LIST Function = Adju Cmpl Conj EPPr ExsS Exst Frnt Intj IntS Loca Modi ModS NCop NCoS Nega Objc PrAd PrcS PreC Pred PreO PreS PtcO Ques Rela Subj Supp Time Unkn Voct ;
LIST ClauseType = AjCl CPen Defc Ellp InfA InfC MSyn NmCl Ptcp Reop Unkn Voct Way0 WayX WIm0 WImX WQt0 WQtX WxI0 WXIm WxIX WxQ0 WXQt WxQX WxY0 WXYq WxYX WYq0 WYqX xIm0 XImp xImX XPos xQt0 XQtl xQtX xYq0 XYqt xYqX ZIm0 ZImX ZQt0 ZQtX ZYq0 ZYqX ; # feature typ
LIST AGen = m f ;

####################
# Word lists
####################

LIST Lemma = ".*"r ;

LIST ConjAblePrep = "כמו" "למען" "עד" ;
LIST ConjAbleSubsPrep = "בלת" ;
LIST SubsToPrep = "אחר" "בין" "אצל" "בעד" ;
LIST XcompInf = "יסף" "יכל" "חפץ" "מהר" "אמץ" "חדל" "כלה" "ירא" "מלא" "חלל" "יאל" "לאה" "צוה" "נתן" "אבה" "מאן" "שׁבע" "הון" ;
LIST XcompNoObj = "מלא" ;

LIST Masculine = "מכיר" "אשׁר" "בצע" "בקר" "כנען" "יהודה" "יאר" ;
# TODO: BDB says sometimes masculine
LIST FeminineMixed = "ארץ" "יד" "צאן" "אשׁ" "גן" "גפן" ;
# TODO: BDB says sometimes feminine
LIST MasculineMixed = "לחם" "דרך" "אור" "אות" "ארון" "גמל" "מצרים" "ישׂראל" ;

####################
# Universal Dependencies
####################

LIST @root = @root ;     # The root of the sentence, often a finite verb
LIST @nsubj = @nsubj ;   # The nominal subject of the sentence
LIST @nsubj:outer = @nsubj:outer ;
LIST @amod = @amod ;       #
LIST @advmod = @advmod ; # An adverbial modifier
LIST @case = @case ;     # The relation of an adposition to its head
LIST @acl = @acl ;
LIST @acl:relcl = @acl:relcl ;       # A clause which modifies a nominal
LIST @nmod = @nmod ;     # Nominal modifier
LIST @punct = @punct ;   # Any punctuation
LIST @cop = @cop ;       #
LIST @nmod:poss = @nmod:poss ;
LIST @obl = @obl ;
LIST @obl:npmod = @obl:npmod ;
LIST @obj = @obj ;
LIST @iobj = @iobj ;
LIST @advcl = @advcl ;
LIST @parataxis = @parataxis ;
LIST @det = @det ;
LIST @csubj = @csubj ;
LIST @nummod = @nummod ;
LIST @compound:smixut = @compound:smixut ;
LIST @cc = @cc ;
LIST @conj = @conj ;
LIST @ccomp = @ccomp ;
LIST @mark = @mark ;
LIST @discourse = @discourse ;
LIST @vocative = @vocative ;
LIST @appos = @appos ;
LIST @dislocated = @dislocated ;
LIST @xcomp = @xcomp ;
LIST @flat = @flat ;
LIST @flat:name = @flat:name ;
LIST @orphan = @orphan ;
LIST @fixed = @fixed ;
LIST @expl = @expl ;
LIST @dep = @dep ;       # Any remaining dependency

LIST Relation = @acl @acl:relcl @advcl @advmod @amod @appos @aux @case @cc @ccomp @compound @compound:smixut @conj @cop @csubj @dep @det @discourse @dislocated @dobj @expl @fixed @flat @flat:name @iobj @mark @nmod @nmod:poss @nsubj @nsubj:outer @nummod @obj @obl @obl:npmod @orphan @parataxis @punct @root @vocative @xcomp ;

####################
# Unsorted lists
####################

LIST NPish = NP PP ;
LIST SubsOverride = (Genesis w20500) (Ruth w1233) (Genesis w13703) (Genesis w14216) ; # actually nouns, don't retag as prep
LIST ItgAdv = "מתי" "איפה" "איך" "אן" "מדוע" "למה" "אי" "איה" "אין" ;

########################################
# INDIVIDUAL WORDS
########################################

BEFORE-SECTIONS

####################
# Hide Punctuation
####################

MAP REPEAT @punct (punct) ;
REMCOHORT IGNORED REPEAT (punct) ;

####################
# Corrections
####################

SUBSTITUTE (infc) (infa) (Ruth w797) ;

SUBSTITUTE (*) (m) Noun - AGen IF (0 Masculine OR MasculineMixed) ;
SUBSTITUTE (*) (f) Noun - AGen IF (0 FeminineMixed) ;

SUBSTITUTE (a) (c) (Genesis w3485) ;

####################
# MWE names
####################

SUBSTITUTE (nmpr a) (subs c m retag:nmpr) ("בית" wp1) ;
SUBSTITUTE (nmpr a) (subs c m retag:nmpr) ("בן" wp1) ;
SUBSTITUTE (nmpr) (subs retag:nmpr m) ("אל" wp2) ;
SUBSTITUTE (nmpr) (subs retag:nmpr) ("לחם" wp2) ;
SUBSTITUTE (nmpr) (subs retag:nmpr) ("צדק" wp2) ;
SUBSTITUTE ("מלכי" nmpr) ("מלך" subs c retag:nmpr) (wp1 Genesis w6557) ;
SUBSTITUTE ("עמי" nmpr) ("עם" subs retag:nmpr has_prn) ("עמי" wp2) ;
SUBSTITUTE ("אוני" nmpr) ("און" subs retag:nmpr has_prn) ("אוני" wp2) ;
ADDCOHORT ("<prn>" "אני" prn p1 sg) AFTER ("עם" subs retag:nmpr) ;
ADDCOHORT ("<prn>" "אני" prn p1 sg) AFTER ("און" subs retag:nmpr) ;
MAP @nmod:poss (prn) IF (p (wp2)) ;

MAP @flat:name (nmpr wp2) IF (-1 (nmpr wp1)) ;
SETPARENT @flat:name TO (-1* (nmpr wp1)) ;

SETPARENT (wp2) TO (-1* (wp1)) ;
SETPARENT (*) - (prn) TO (p (wp2) LINK p (wp1)) ;
MAP @compound:smixut (wp2) IF (p (wp1 c)) ;

####################
# MWE conjunctions
####################

WITH ("אם" conj) OR ("כי" conj) IF (-1 ("עד" prep)) {
  SETPARENT (*) TO (jC1 (*)) ;
  MAP @fixed (*) ;
  SUBSTITUTE (prep) (conj retag:prep ExtPos=SCONJ) _C1_ ;
} ;

WITH ("בלת" subs) - @fixed IF (-1 ("ל" prep)) {
  SETPARENT (*) TO (jC1 (*)) ;
  MAP @fixed (*) ;
  ADD (ExtPos=SCONJ) _C1_ ;
} ;

WITH ("אפס" subs CjpCjp) IF (pr ("כי" conj _)) {
    REMPARENT (*) ;
    SETCHILD (*) TO (jC1 (*)) ;
    MAP @fixed _C1_ ;
    REMCOHORT IGNORED _C1_ ;
    ADD (ExtPos=SCONJ _) (*) ;
} ;

####################
# Retagging
####################

# Substantivized adjectives
SUBSTITUTE (adjv) (subs retag:adjv) (c) ;
SUBSTITUTE (adjv) (subs retag:adjv) (a) (1 BD) (-1* Noun + (c) BARRIER (*) - Det) ;
SUBSTITUTE (adjv) (subs retag:adjv) (adjv a) (1 (prn)) ;
# TODO: does this really apply to all gentillics?
SUBSTITUTE (adjv) (subs retag:adjv) (adjv gntl pl) ;
SUBSTITUTE (adjv) (subs retag:adjv) (adjv gntl) (-1* Noun + (c) BARRIER (*) - Det) ;
SUBSTITUTE (adjv) (subs retag:adjv) (adjv gntl) (NEGATE 0* (subs) - (retag:adjv gntl) OR (nmpr) BARRIER PB) ;

# Participles in smixut
SUBSTITUTE (verb) (subs retag:verb) Participle + NPish - (NpAdjp) IF (NEGATE c (role:O));
SUBSTITUTE (verb) (subs retag:verb) Participle + (c) IF (c (NPofNP)) ;

# Adverbs tagged subs
SET AdvOk = (*) - (prn ModS) - ("מאד" padv) ;
SUBSTITUTE (subs) (advb retag:subs) (padv) - (NP) (-1* BD BARRIER AdvOk) (1* BD BARRIER AdvOk) ;
LIST AdvRules = AdvpNp AdvpNump AdjpAdvp NpAdvp AdvpNp2advp AdvpPp ;
SUBSTITUTE (subs) (advb retag:subs) (padv) + AdvRules - (c) ;
SUBSTITUTE (subs) (advb retag:subs) ("עוד" padv role:ADV) ;
SUBSTITUTE (subs) (advb retag:subs) ("עוד" padv AdvpNp) ;

# Determiner on clause participles
SUBSTITUTE (art) (conj retag:art) (CP Rela)
        IF (NEGATE 0 (DetAdjp) LINK p (adjv NpAdjp))
        (NEGATE 0 (DetNP) LINK p (adjv role:O)) ;

# Prepositions tagged as nouns
SUBSTITUTE (subs) (conj retag:subs) ConjAbleSubsPrep + (CP) ;
SUBSTITUTE (subs) (advb retag:subs) ("אחר" subs ppre AdvP) (1 BD) ;
SUBSTITUTE (subs) (prep retag:subs) SubsToPrep + (subs ppre) ;
SUBSTITUTE (subs) (prep retag:subs) (ppre CP Conj)
    IF (NOT 0 SubsOverride)
       (NEGATE 0 ("טרם" subs) LINK -1 ("ב" prep))
       (NEGATE 0 ("בלי" subs CP) LINK -1* ("על" prep) BARRIER PB) ;

SUBSTITUTE (prep) (conj retag:prep) ConjAblePrep + (CP)
    IF (NOT 1 ("אשׁר" conj)) ;

# yesh and ein
SUBSTITUTE (subs) (verb retag:subs ClauseRoot) (nmcp) - ("אפס") ;

# interrogative adverbs
SUBSTITUTE (inrg) (advb retag:inrg) ItgAdv ;

####################
# Lookup table overrides
####################

WITH ("נגד" subs role:PP) IF (-1 ("כ" prep) LINK -1 ("עזר" subs)) {
  SETPARENT (*) TO (jC1 (*)) ;
  MAP @nmod (*) ;
} ;

SUBSTITUTE @cc @advmod (advb focp) ;
SUBSTITUTE @cc @mark SCONJ ;

####################
# Consistent labels
####################

MAP @det Det ;
MAP @mark SCONJ + (conj CP) OR (ExtPos=SCONJ) ;
MAP @mark ("ה" inrg) ;
MAP @obj ("את") + Pr IF (1 RelMark) ;
MAP @obl Pr IF (1 RelMark) ;
MAP @case Pr - (ExtPos=SCONJ) ;
MAP @cc (conj) - (Rela) ;
SET AdvAsNP = (PPandPP) - (focp) ;
MAP @advmod ADV - (role:P) - (ClCl2) - (ClCl) - AdvAsNP - (AdvpandAdvp) ;
MAP @discourse (intj) - (role:P) OR (intj uprole:S) ; # TODO: is there a better way to handle הנה?
MAP @expl (prde InrP) - (_) ;

####################
# Pronoun suffixes
####################

SUBSTITUTE ("prn") ("אני") ("prn" prn p1 sg) ;
SUBSTITUTE ("prn") ("אנחנו") ("prn" prn p1 pl) ;
SUBSTITUTE ("prn") ("אתה") ("prn" prn p2 m sg) ;
SUBSTITUTE ("prn") ("את") ("prn" prn p2 f sg) ;
SUBSTITUTE ("prn") ("אתם") ("prn" prn p2 m pl) ;
SUBSTITUTE ("prn") ("אתן") ("prn" prn p2 f pl) ;
SUBSTITUTE ("prn") ("הוא") ("prn" prn p3 m sg) ;
SUBSTITUTE ("prn") ("היא") ("prn" prn p3 f sg) ;
SUBSTITUTE ("prn") ("הם") ("prn" prn p3 m pl) ;
SUBSTITUTE ("prn") ("הן") ("prn" prn p3 f pl) ;

####################
# Role overrides
####################

LIST CCONJ = ("ו" conj) ("או" conj) ;
SETPARENT CCONJ - (_) (pl (*)) TO (sllr (*)) ;

LIST FinCL = /((S|V|O2?|PP?|ADV)-)+(S|V|O2?|PP?|ADV)/r ;
LIST FinCLPP = /((S|V|O2?|PP?|ADV)-)+PP/r ;
LIST EllpCL = /^((S|O2?|PP|ADV)-)+(S|O2?|PP|ADV)$/r ;
LIST VerbCL = /^V-|-V-|-V$/r ;

LIST ConjSeq = /Conj\\d.*/r ;

MAP @conj ConjSeq IF (c (conj)) ;

MAP @conj $$Function - (CLandCL2+if) IF (c ("ו" conj)) (p $$Function) ;

MAP @compound:smixut (NP) IF (p (subs ptcp c)) ;

# TODO: genesis 261 has smixut
LIST ReflexiveNouns = "אח" "רע" ;
WITH ("אישׁ" subs role:ADV)
  IF ((c ReflexiveNouns + (subs NpPp))
      OR (sw (c role:O) LINK c ReflexiveNouns)) {
  MAP @parataxis (*) ;
  SETCHILD (*) TO (jC1 (*)) ;
  MAP @orphan _C1_ ;
} ;

MAP @nmod (PP role:PP) OR (NP role:PP) IF (p (longlist)) ;
MAP @parataxis (NP role:O2) IF (p (longlist)) ;
MAP @orphan EllpCL - (role:S) ;

SETPARENT SAFE (prep) TO (1 (verb infc)) ;
SETPARENT SAFE Det TO (1 (subs) OR (nmpr)) ;
SETPARENT SAFE (prn) TO (-1 (subs)) ;

####################
# By role
####################

WITH NOMAPPED (role:ADV) {
    MAP @conj (Subj Ellp) IF (pl (*)) (cl @cc) ;
    MAP @parataxis (Subj Ellp) IF (pl (*)) ;
    MAP @nsubj (Subj Ellp) ;
    MAP @obl (adjv ordn) ;
    MAP @parataxis ("אישׁ") IF (0 (ClCl) OR (Ellp) OR (CPen Frnt)) ;
    MAP @xcomp (PrAd) OR (Subj) ;
  MAP @obj (Objc) OR (prn PreO) IF (NEGATE s (role:O)) ;
  MAP @obl (NP rela:Attr) OR (NP Time) OR (adjv ordn) OR (NP Modi)
    IF (NOT 0 (Ellp CLaCL)) ;
  MAP @obl (NP) + VerbCL IF (NEGATE s (role:O)) ;
  MAP @obl (NP Loca) + VerbCL ;
  MAP @xcomp (NP) + VerbCL - (Adju) IF (NEGATE s (role:O2)) ;
  MAP @obl:npmod (infa) + $$Lemma IF (p $$Lemma) (NEGATE c (CLaCL) OR (AdvpandAdvp)) ;
  MAP @advcl (infa) OR (infc) ;
  MAP @obl (subs) OR (nmpr) OR (prn) IF (NOT 0 (Ellp CLaCL)) ;
  MAP @xcomp (adjv) ;
  MAP @advcl (verb perf) IF (c (relCL @mark)) ;
  MAP @obj ("מה" prin) IF (NEGATE s (role:O)) ;
  MAP @expl ("זה" prde) ;
  MAP @advmod (*) - (nmcp) - (Ellp CLaCL) ;
} ;

WITH NOMAPPED (role:Appos) {
  MAP @dislocated (*) IF (pl (role:S) LINK pr (*) LINK 1* _TARGET_) ;
  MAP @xcomp (adjv) IF (p (verb ptca)) ;
  MAP @amod (adjv) ;
  MAP @acl:relcl (verb ptca) ;
  MAP @compound:smixut (*) IF (-1* (c) BARRIER (*) - Det LINK c _TARGET_) ;
  MAP @appos (*) - (uprole:P) ;
} ;

LIST HifilNoIobj = "קרב" "קטר" "בוא" "נוף" "קדשׁ" "רום" ;
WITH NOMAPPED (role:O) - (Ellp CLaCL) - (Ellp ClCl) {
    MAP @parataxis (ClCl) IF (c @orphan) ;
    MAP @compound:smixut (*) IF (p (subs c)) ;
    MAP @xcomp (verb infc) IF (p XcompInf) ;
    MAP @ccomp (verb) - Participle ;
    MAP @obl (*) IF (p ("נתן" verb qal)) (s (role:O2)) (NEGATE s (role:PP) LINK c ("ל") OR ("על") OR ("אל")) ;
    MAP @iobj (*) IF (p (verb hif) - HifilNoIobj) (s (role:O2)) ;
    MAP @obj (*) - (CLaCL) - (_) IF (NEGATE c (vbcp) - (NpRelp)) ;
} ;

WITH NOMAPPED (role:O2) {
    MAP @obj (*) IF (p ("נתן" verb qal)) (s (role:O @obl)) ;
    MAP @obj (*) IF (p (verb hif)) (s (role:O @iobj)) ;
    MAP @xcomp (*) ;
} ;

WITH NOMAPPED (role:PP) {
  MAP @mark (SCONJ) ;
  MAP @xcomp (verb infc) IF (p XcompInf) (c ("ל" prep) OR ("מן" prep)) ;
  MAP @advcl (verb infc) IF (c ("ל" prep) OR ("מן" prep) OR ("כ" prep)) ;
  MAP @nmod (*) IF (p (subs retag:verb)) ;
  MAP @xcomp (PrAd) IF (NEGATE s (role:O2)) ;
  MAP @advcl (NmCl) IF (c @mark - (relCL)) ;
  MAP @obl (*) - (_) IF (NEGATE c (vbcp) - (NpRelp) OR (relCL @mark)) ;
} ;

WITH NOMAPPED (role:S) - (_) {
  MAP @nsubj:outer (S-P) OR (ADV-S-P) IF (p (role:V)) ;
  MAP @csubj (*) IF (c (relCL @mark)) ;
  MAP @vocative (Voct) ;
  MAP @csubj (verb ptca) ;
  MAP @nsubj (*) - (ClCl) - (CLaCL) ;
} ;

LIST roleVP = role:V role:P ;
WITH NOMAPPED roleVP {
    MAP @xcomp (*) IF (p (nmcp role:ADV)) ;
    MAP @xcomp (infc uprole:O) OR (uprole:O2) ;
    MAP @advcl (infc uprole:ADV) OR (infa uprole:ADV) ;
    MAP @ccomp (uprole:O) IF (NEGATE c (relCL @mark)) ;
    MAP @conj (CLaCL) ;
    #MAP @cop (vbcp) + FinCL ;
    # TODO: perf error in genesis 427?
    MAP @acl:relcl (verb ptca Np-Appos) OR (verb perf Np-Appos) ;
    MAP @acl:relcl (NpCL) IF (p (prde IPrP)) ;
    MAP @acl (NpCL rela:RgRc perf) ;
    MAP @parataxis (NpCL) - (ptca) - (ptcp) - (nmcp) - (rela:Attr) IF (NEGATE c @mark) ;
    MAP @obl (uvf:H AdvP uprole:ADV) OR (Cmpl V-ADV uprole:ADV) ;
    MAP @csubj (verb uprole:S) ;
    MAP @xcomp (verb ptca uprole:ADV) ;
    MAP @nsubj (PrNP uprole:S) ;
    MAP @obl (role:P uprole:P) IF (c @case) (p (role:ADV)) ;
    MAP @advcl (uprole:PP) IF (c (PrepCL @mark) OR (subs PrepCL)) (NEGATE p XcompInf) ;
    MAP @nsubj (subs retag:verb uprole:S) ;
    MAP @appos (uprole:Appos) IF (cl (relCL)) (sl (relCL)) ;
    MAP @parataxis (uprole:Appos) ;
    MAP @advcl (subs uprole:PP) OR (adjv uprole:PP)
            IF (c (role:PP) OR (role:O) OR (role:S)) ;
    MAP @ccomp (role:V uprole:P) IF (p ("ידע" verb)) ;
} ;

####################
# Static labels
####################

LIST AclRules = NpRelp PpRelp NpCL AdvpRelp OmpRelp ;
LIST ApposRules = (2Advp_h2 subs) ;
LIST FlatRules = NumpNump ;
LIST NmodRules = NpPp NumpPp AdvpPp2 PpNp2Np PpNump2 ;
LIST NummodRules = NpNump NumpNP ;

MAP @acl (infc NpPp) OR (infc NpInf) ;
MAP @acl:relcl AclRules ;
MAP @appos ApposRules ;
MAP @flat FlatRules ;
MAP @nmod NmodRules ;
MAP @nummod NummodRules ;

MAP @det (prde NumpAdjp) ;
MAP @expl (prde Np-Appos) ;
MAP @mark (SCONJ) ;
MAP @nmod:poss (prn PrepNp+NomPrep) OR (prn QuanNP) ;
MAP @obl (prin AdvpAdjp) ;
MAP @parataxis (ClClCl) OR (ClClClCl) ;

####################
# Simple labels
####################

MAP @advcl (2Advp_h1 verb) ;
MAP @advcl (2Advp_h2 verb) ;

WITH NOMAPPED (2Pp) {
  MAP @appos (*) IF (c @case + $$Lemma) (s @case + $$Lemma) ;
  MAP @nmod (*) ;
} ;

WITH NOMAPPED (AdjpNp) {
  MAP @det (prde) ;
  MAP @amod (*) ;
} ;

MAP @obj (AdjpofNp) IF (p (verb ptca)) ;

WITH NOMAPPED (AdjpPp) {
  MAP @obl (*) IF (p (verb)) ;
  MAP @obl (*) IF (p @conj LINK p (verb)) ;
  MAP @nmod (*) ;
} ;

MAP @advmod (AdvpCL inrg) ;

WITH NOMAPPED (CLandCL2+if) {
  MAP @dislocated (NP CPen Frnt) ;
  MAP @csubj (VP CPen) ;
  MAP @advcl (*) ;
} ;

MAP @dislocated (CLandCL2+disloc) ;

WITH NOMAPPED (ClCl) {
  MAP @advcl (verb infc) IF (p (verb) - (infc)) ;
  MAP @parataxis (NP Voct) OR (PrNP Voct) IF (p (NP Voct) OR (PrNP Voct)) ;
  MAP @vocative (Voct) IF (p (_) OR roleVP OR (intj ClCl2)) ;
  MAP @xcomp (*) IF (p ("ראה")) (c ("כי")) ;
  MAP @acl:relcl (*) IF (c (relCL @mark)) (p (NP) OR (PrNP)) ;
  MAP @acl:relcl (*) IF (c (relCL @mark) LINK sl (prep)) ;
  MAP @advcl (*) IF (c (conj) - ("ו") - ("ה")) ;
  MAP @dislocated (NP Subj) OR (PPrP Subj) IF (NEGATE c (nega @advmod) OR @orphan) ;
  MAP @xcomp (ptca) IF (NEGATE c @nsubj OR @nsubj:outer OR @csubj) ;
  MAP @ccomp (rela:Objc) ;
  MAP @parataxis (*) ;
} ;

LIST NorP = NP PP PrNP PPrP DPrP ;
LIST dislocatedClCl2 = (CPen Frnt) Subj Adju PreC ;
WITH NOMAPPED (ClCl2) {
    MAP @obl (PP Time) ;
    MAP @vocative (Voct) IF (p (_) OR (role:P) OR (role:V)) ;
    MAP @vocative (<txt:0>) IF (p (<txt:1>)) ;
    MAP @dislocated dislocatedClCl2 + NorP OR dislocatedClCl2 + (prde) OR dislocatedClCl2 + (prin) IF (NEGATE c @nsubj) ;
    MAP @obl (Modi) + NorP ;
    MAP @acl:relcl (*) IF (p (prep)) ;
    MAP @acl:relcl (role:V) IF (c (relCL @mark) LINK sl (prep PrepNp)) ;
    MAP @xcomp (role:V) IF (c (relCL @mark)) ;
    MAP @advcl (nmcp) OR (role:V uprole:V) ;
    MAP @advcl (*) IF (c (conj) - ("ו")) ;
    MAP @advmod (advb) IF (c @acl:relcl) ;
    MAP @xcomp (PrAd) ;
    MAP @obj (PP Objc) ;
    MAP @dislocated (Objc) IF (sr @obj) ;
} ;

WITH NOMAPPED (NP3NP) {
  MAP @conj (*) IF ((sr (*) LINK c @cc) OR (c @cc)) ;
  MAP @appos (*) ;
} ;

WITH NOMAPPED (NpAdjp) {
  MAP @det (prde) OR (ppde) ;
  MAP @acl:relcl (verb) ;
  MAP @nummod (adjv ordn) ;
  MAP @nmod (subs retag:adjv) IF (NOT p (c)) ;
  MAP @compound:smixut (subs retag:adjv) IF (NEGATE sl @compound:smixut) ;
  MAP @amod (*) ;
} ;

WITH NOMAPPED (NpAdvp) {
    MAP @conj (subs padv) IF (p (subs padv)) ;
    MAP @nmod (subs) OR (nmpr) OR (prn) IF (p (subs) OR (nmpr)) ;
} ;

WITH NOMAPPED (NpNpNp) {
    MAP @conj (*) IF (p (_)) ;
    MAP @conj (*) IF (sl (NpaNp) OR @conj) ;
    MAP @conj (sg) IF (sr (adjv pl)) ;
    MAP @appos (*) ;
} ;

WITH NOMAPPED (NPofNP) {
    MAP @acl:relcl (*) IF (cl (relCL)) ;
    MAP @compound:smixut (prde) IF (p (c) LINK 1 _TARGET_) ;
  MAP @appos (prde) ;
  MAP @obj (prn) IF (-1 (verb ptca)) ;
  MAP @nmod:poss (prn) ;
  MAP @acl:relcl (verb ptca) ;
  MAP @obj (*) IF (p (verb ptca @acl:relcl)) ;
  MAP @nsubj (Subj) IF (p (infc c)) ;
  MAP @compound:smixut (*) IF (p (c) OR (subs a dir_he)) (NEGATE sl (subs) LINK pl (*)) ;
  MAP @amod (adjv gntl) IF (p (a)) ;
  MAP @nmod (adjv) ;
  MAP @obj (*) IF (p (verb ptca a)) ;
  MAP @appos (*) ;
} ;

LIST ppCL2advcl = ExtPos=SCONJ ("טרם" subs) ("עבור" subs) ;
WITH NOMAPPED (ppCL) IF (p ppCL2advcl) {
  ADD (_) (*) IF (jC1 (_)) ;
  MAP @advcl (*) ;
  SETPARENT @advcl TO (p (*) LINK p (*)) ;
  SETCHILD @advcl TO (jC1 (*)) ;
  SUBSTITUTE @parataxis @obl _C1_ ;
  SUBSTITUTE (_) (*) _C1_ ;
  MAP @obl _C1_ ;
  SETCHILD (*) TO (jC1 (*) LINK c (CLandCL2)) ;
} ;
MAP @acl:relcl (ppCL) ;

MAP @obl (subs PrepCL) ;

MAP @obl (PtclCL) ;

MAP @acl:relcl (verb ptca a) IF (p (c)) ;

LIST CompoundAble = QuanNP PrepNp+NomPrep AdjpofNp ;
MAP @compound:smixut CompoundAble IF (p (c)) ;

MAP @advcl (CLaCL) IF ((c @mark) OR (sl @mark LINK pl (*))) ;
MAP @dislocated (CPen Frnt CLandCL2) IF (pr (*)) ;
LIST ListRules = 2PpaPp AdjpAdjpandAdjp AdjpandAdjpAdjp CLaCL aCLaCL CLa2CL
	 		  2CLaCL 2Np 2NpaNpaNp 2Pp 3NpaNp AdjpaAdjp aNpaNp aNpaNpaNp
				CLaCL CLandCL2 Conj3CL Conj4Np Conj4Pp Conj5Np
				NP3NP NpaNp NPaNPaNPNPaNP NPaNPNP NPaNPNPaNP NpNpNp
				NPNPNPaNPaNP NpNpNp NpNpNpNp NpPp NumpAndNump ppPP6PP
				PPandPP PpaPpPpaPp Relp3Relp PpPp PpandPpPp NPNPaNPNPaNP
        CjpAdvpCjpAdvp NPNPaNPaNPaNP NumpaNumpaNumpaNump NPaNPaNPaNPNP
        PPPP4 NpNpNpNpNp NpNp6 aPpaPpaPp NumpaNumpaNump PpPpPpPpandPp
        NPaNPaNPaNPNPaNP NpNp5 3Adjp PpPpPpPpPp PpPpPp ppPP5PP NPnp4NP ;
MAP @conj ListRules ;

MAP @csubj FinCL + (rela:Subj) ;

WITH (verb infc) + FinCLPP IF (c (prep PrepCL)) {
  MAP @xcomp (*) IF (p XcompInf) (NEGATE c ("עד" @case) OR ("אחר" @case) OR ("ב" @case)) (NEGATE s @xcomp) ;
  MAP @csubj (*) IF (c ("מן" @case)) (p ("חלילה" intj)) ;
  MAP @advcl (*) ;
} ;

SWITCHPARENT (*) - (prep) IF (p ("אמר" verb infc) - (actuallyinf) LINK -1 ("ל" prep)) ;
WITH ("ל" prep) IF (1 ("אמר" verb infc) - (actuallyinf)) {
    REMPARENT (*) - (quoteoverride) ;
    UNMAP (*) ;
    UNMAP _C1_ ;
    SETCHILD (*) TO (jC1 (*)) ;
    MAP @fixed _C1_ ;
    REMCOHORT IGNORED _C1_ ;
    MAP (SCONJ quot ExtPos=SCONJ @mark) (*) ;
} ;

####################
# Other rules
####################

# end of BEFORE-SECTIONS
SECTION

SETPARENT @acl:relcl + roleVP TO (p (QuanNP @compound:smixut) LINK p (*)) ;
SETPARENT @dislocated + (role:Appos) TO (p @nsubj LINK p (*)) ;

SETPARENT @vocative TO (p @discourse LINK p (*)) ;

LIST AdvConj = CLaCL 2CLaCL aNpaNp aNpaNpaNp CjpAdvpCjpAdvp aPpaPpaPp
        Conj3CL ;
SETPARENT @advmod + $$AdvConj (pl (*)) TO (sr $$AdvConj) ;

SETPARENT @obj (p (nmcp role:ADV)) TO (sl (role:V @xcomp)) ;

WITH (PpPp @conj) IF (pr @obl) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SUBSTITUTE @conj @obl (*) ;
} ;

SUBSTITUTE @acl:relcl @parataxis (adjv) OR (card) IF (NEGATE c @mark) ;

SETPARENT (@case PpPp) TO (p @case LINK p (*)) ;

SETPARENT SAFE SCONJ + (_) TO (1* (_)) ;

WITH @obl + Pr OR @obj + Pr IF (pr (*)) (s (relCL @mark)) {
  SETCHILD (*) TO (sl @cc) ;
  SETPARENT (*) TO (jC1 (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
  MAP @acl:relcl _C1_ ;
  SUBSTITUTE @obj @acl:relcl _C1_ ;
  SUBSTITUTE @conj @acl:relcl _C1_ ;
  SUBSTITUTE @obl @conj (*) IF (jC1 (Conj4Pp)) ;
} ;

# fixes genesis 896 - fragile, may break other things
WITH NOPARENT (subs) - (_) IF (-1 (subs c) - (ppre) - @nummod OR (nmpr c)) {
  SETPARENT SAFE (*) TO (jC1 (*)) ;
  MAP @compound:smixut (*) ;
} ;

SETPARENT SAFE @det TO (1 (subs)) ;
WITH NOPARENT (subs) IF (-1* (subs c) - (ppre) - @nummod BARRIER (*) - Det) {
  SETCHILD (*) TO (-1 Det) ;
  SETPARENT (*) TO (jC1 (*)) ;
  MAP @compound:smixut (*) ;
} ;

WITH NOMAPPED (subs PrepNp) IF (p (*)) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  MAP @orphan (*) IF (jC1 @orphan) ;
  MAP @obl (*) ;
  SETCHILD (*) TO (jC1 (*)) ;
  SUBSTITUTE @obl @nmod:poss _C1_ IF (0 (prn)) ;
  SUBSTITUTE @obl OR @orphan @compound:smixut _C1_ IF (NOT 0 (_override)) ;
} ;

SETPARENT SAFE Det TO (1 (prde)) ;

WITH (Ellp Subj @parataxis) IF (sr (Ellp) - (Subj) - (_override)) {
    SETCHILD (*) TO (jC1 (*)) ;
    UNMAP _C1_ ;
    MAP @orphan _C1_ ;
} ;

WITH (PpAdvp) IF (pr (NpRelp)) (sl @mark) {
    MAP @acl:relcl (*) ;
    SWITCHPARENT WITHCHILD (*) (*) ;
} ;

MAP @nmod:poss (prn) IF (p (subs) LINK 1 _TARGET_) ;

SECTION

SETPARENT (*) TO (p ("ו" conj) LINK p (*)) ;

WITH (subs ppre c) - @acl:relcl IF (pr @obl) {
  MAP @obl (*) ;
  SUBSTITUTE @obl @compound:smixut (*) IF (jC1A (*)) ;
  SETPARENT (*) TO (jC1 (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
} ;

SETPARENT @appos OR @nmod TO (p (QuanNP) LINK p (*)) ;

SETPARENT SAFE (SCONJ) TO (1* @ccomp) ;

SETPARENT @nsubj TO (p @discourse LINK p (*)) ;

WITH (nmpr) IF (-1 (subs c)) (NOT p (*)) {
	SETPARENT (*) TO (-1 (*)) ;
	MAP @compound:smixut (*) ;
} ;

WITH (PpPpPpPp) OR (PpPpPp) IF (p @obl) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  MAP @obl (*) ;
  SUBSTITUTE @conj @obl (*) ;
} ;

MAP @advcl (infc uprole:PP) OR (verb ptca uprole:PP) OR (AdjP AjCl uprole:PP) IF (c @case) ;
MAP @obl (uprole:PP) - (_) - (role:P) IF (c @case) ;

LIST CcAdvList = PPandPP NpaNp aCLaCL ;
SETPARENT @cc + (CjpCjp) TO (p @advmod + CcAdvList LINK p (*)) ;

MAP @amod (AdjpAdjp) ;
SETPARENT (AdjpAdjp) - (_override) TO (p @amod LINK p (*)) ;

WITH NOMAPPED NOPARENT (NP _ rela:Coor) {
    SETPARENT (/^par:\(.*\)$/r) TO (-1* (@conj VSTR:$1)) ;
    SETPARENT REPEAT (*) TO (p @conj LINK p (*)) ;
    MAP @conj (*) IF (p @conj) ;
} ;

WITH NOMAPPED (PP Objc _) IF (p (>>>)) {
    SETPARENT (/^\(s\\d+\)$/r) TO (-1* (@conj Objc VSTR:$1) BARRIER (VP _) LINK p @obj) ;
    SETCHILD (*) TO (cl (prep) LINK -1* (conj) BARRIER (*) - BD) ;
    SUBSTITUTE (_) (@conj longlist) (*) IF (sl @conj) ;
} ;

WITH @obl IF (srrl ("אישׁ" @parataxis)) (cc (prn p3 m sg)) {
    SETPARENT (*) TO (jC1 (*)) ;
    SUBSTITUTE @obl @orphan (*) ;
} ;

####################
# Clause Connections
####################

SECTION

LIST TextLevel = <txt:0> <txt:1> <txt:2> ;

SET NonPredAdv = (advb) - (role:P) ;
SET Top = (_) - (conj) - @discourse - NonPredAdv - @obl ;

SETPARENT (conj _) (p (>>>)) TO (1* (_)) ;
SETPARENT @mark - (_override) TO (p @obl LINK p (*)) ;

LIST NonAdvclConj = "ו" retag:art "או" ;

WITH (PP Adju _) + $$TextLevel - (_override) IF (1* (_ role:V) + $$TextLevel) (NEGATE c @nsubj) {
  SETPARENT (*) TO (jC1 (*)) ;
  MAP @obl (*) ;
} ;

WITH (ppCL) IF (p @mark + (retag:prep)) {
  UNMAP (*) ;
  MAP @advcl (*) ;
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
} ;

WITH (prep PrepNp) IF (p (verb ptca)) (s (conj retag:art)) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
  SUBSTITUTE Relation @acl:relcl _C1_ ;
  MAP @acl:relcl _C1_ ;
} ;

WITH Top + (/^<txt:\(\\d+\)>$/r) - @advcl - (_override)
  IF (-1* Top + (VSTR:<txt=$1>) BARRIER Top) (c (conj) - NonAdvclConj) {
    SETPARENT (*) TO (jC1 (*)) ;
    MAP @conj (*) IF (c @cc) (jC2 $$Lemma) (s (conj) + $$Lemma) ;
    MAP @conj (*) IF (c @nsubj:outer LINK sl @cc) ;
	  MAP @advcl (*) ;
} ;

WITH Top + (/^<txt:\(\\d+\)>$/r) - @advcl - (_override) - (SCONJ)
  IF (-1*O (>>>) OR Top + (VSTR:<txt<$1>) LINK 1* Top + (VSTR:<txt=$1>) LINK ppSrr Top + (VSTR:<txt=$1>)) (NEGATE c ("או" conj)) {
    SETPARENT (*) TO (jC1 (*)) ;
    MAP @advcl (*) IF (cl @mark - (retag:art) - (inrg)) ;
    MAP @conj (*) IF (c (conj) - (retag:art)) ;
	SETPARENT (verb infc) (c (prep)) TO (p (*) LINK c (@xcomp verb infc)) ;
} ;

LIST SpeakingVerb = quot "ברך" "צוה" "נגד" "דבר" "ענה" "שׁמע" "מלל" ;

WITH Top + (/^<txt:\(\\d+\)>$/r) - (_override)
  IF (llccS Top LINK -1* Top + (VSTR:<txt<$1>) - (SCONJ) BARRIER Top - (SCONJ))
     (NEGATE pr (*)) {
    SETPARENT (*) TO (jC1 (*)) ;
    MAP @ccomp (*) IF (jC1 SpeakingVerb) ;
} ;

MAP @ccomp (/^<txt:\(\\d+\)>$/r) + FinCL IF (p SpeakingVerb + (VSTR:<txt<$1>)) ;

SUBSTITUTE @advmod @ccomp (/^<txt:\(\\d+\)>$/r) + Top
  IF (p SpeakingVerb + (VSTR:<txt<$1>)) ;

WITH Top + NPish + (CPen Frnt) + $$TextLevel
  IF (1* Top + $$TextLevel) {
    SETPARENT (*) TO (jC1 (*)) ;
    MAP @dislocated (*) ;
} ;

SETPARENT @mark + (CLaCL) TO (sr (*)) ;

SETPARENT SAFE (SCONJ /^<txt:\(\\d+\)>$/r) TO (1* (_ VSTR:<txt>$1>) - @advmod) ;
SETPARENT (SCONJ /^<txt:\(\\d+\)>$/r) (p (<<<)) TO (1* (_ VSTR:<txt>$1>)) ;
MAP @advcl (*) IF (c (SCONJ)) ;

SETPARENT @advmod + (_) TO (p @advmod + (_) LINK p (*)) ;
SETPARENT @advmod + (_) OR @cc + (_) OR @cc + (CjpCjp) (pr (_) LINK sl (_) LINK -1* _TARGET_)
  TO (1* Top - @advmod - @cc) ;

SETPARENT (advb _) (p (>>>)) TO (sllr (*)) ;
LIST AdvChild2Sibling = (@cc CjpCjp) (@mark CjpCjp) (@advmod CjpAdvp2Advp) ;
SETPARENT AdvChild2Sibling TO (pr @advmod LINK pr (*)) ;

SECTION

SETPARENT (_ @advmod) (p (>>>)) TO (1* (_)) ;
SETPARENT (_) - (_override) (p (>>>)) TO (slll (*)) ;

WITH (ptca @acl:relcl) IF (p @case) (NEGATE c @mark) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SUBSTITUTE @acl:relcl @advcl (*) ;
  SETCHILD (*) TO (jC1 (*)) ;
} ;

WITH (ptca @ccomp) IF (p (vbcp)) {
  UNMAP (*) ;
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
  SETCHILD REPEAT (*) TO (jC1 (*) LINK c (*)) ;
  MAP $$Relation (*) IF (jC1 $$Relation) ;
  ADD (_) (*) IF (jC1 (_)) ;
  UNMAP _C1_ ;
  MAP (@cop _override) _C1_ ;
} ;

MAP @nmod (AdvpNp subs) ;

WITH NOMAPPED (AdvpNp2advp c) IF (pr (subs)) {
    SWITCHPARENT WITHCHILD (*) (*) ;
    MAP $$Relation (*) IF (jC1 $$Relation) ;
    SUBSTITUTE Relation @compound:smixut _C1_ ;
} ;

SECTION

MAP @ccomp (rela:Objc) ;

SETPARENT (_ <txt:1>) - (_override) (p (<txt:0>)) TO (slll (_ <txt:1>) - (conj)) ;

LIST NPConj = NpaNp 2Np 2NpaNpaNp NP3NP NpaNp NPaNPaNPNPaNP NPaNPNP
    NPaNPNPaNP NpNpNp NpNp Conj3Np Conj4Np Conj5Np
    NpNpNp NpNpNpNp NPNPaNPNPaNP NPNPaNPaNPaNP (NP Ellp) NPnp4NP
    longlist ;
LIST PPConj = PpaPp Conj3Pp PPandPP 2PpaPp PPandPP PpaPpPpaPp PpandPpPp
        aPpaPpaPp ppPP6PP ;
LIST ClauseConj = CLaCL aCLaCL 2CLaCL Conj3CL Conj4CL CLa2CL (VP _) ;
SET ConjTypes = NPConj OR PPConj OR ClauseConj ;
SETPARENT @conj + &&ConjTypes - (_override)
        (NEGATE sr @acl:relcl OR @nmod OR @appos OR @nsubj OR @amod)
        (NEGATE s @orphan)
        (NEGATE c ("או" conj))
  TO (p @conj + &&ConjTypes LINK p (*)) ;
SETPARENT @conj + NPConj - (_override) TO (p @conj + (NP _) - (longlist) LINK p (NP _)) ;

SETPARENT (intj @discourse) TO (p (intj @discourse) LINK p (*)) ;

WITH @acl:relcl IF (p ("למען" conj @mark)) {
  SUBSTITUTE @acl:relcl @advcl (*) ;
  SETPARENT (*) TO (jC1 (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
} ;

WITH (NpPart) IF (p @expl LINK p (advb)) {
    SWITCHPARENT WITHCHILD (*) (*) ;
    SWITCHPARENT WITHCHILD (*) (*) ;
    MAP $$Relation (*) IF (jC1 $$Relation) ;
    SUBSTITUTE Relation @advmod _C1_ ;
} ;

SECTION

LIST PredFunction = Cmpl PreC ;
SET CopPredicate =
      (@obj)
   OR (role:O)
   OR (role:PP @obl) + PredFunction - (/-O-|^O-|-O$/r Time)
   OR (PreC V-O)
   OR (role:ADV infa) ;

WITH CopPredicate IF (p (vbcp) - @cop)
  (NEGATE 0 (Cmpl) LINK s (PreC))
{
  UNMAP (*) ;
  ADD (_) (*) IF (jC1 (_)) ;
  MAP (VSTR:$1) (*) (jC1 (/^\(@.*\)$/r)) ;
  UNMAP _C1_ ;
  MAP @cop _C1_ ;
  SETCHILD REPEAT (*) TO (s (*) - (_override)) ;
  SETPARENT (*) TO (jC1 (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
} ;

# Don't call it apposition if it's on the other side of the verb
WITH (@appos) IF (pl @nsubj LINK prw (*) LINK ccr _TARGET_) {
  SETPARENT (*) TO (jC1 (*)) ;
  SUBSTITUTE @appos @dislocated (*) ;
} ;

SUBSTITUTE @obj OR @obl @conj (prep) IF (p (prep)) ;

# guideline examples all have comparatives with @obl
SUBSTITUTE @nmod @obl (AdjpPp) IF (s @cop) (c ("מן" prep @case)) ;

# for some reason this breaks @det rules if run in the MWE section
# e.g. genesis 766 - probably a bug that should be investigated
# (git blame for commit immediately after adding this rule)
WITH ("כי" conj CjpCjp) IF (p ("אם" conj)) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
  SUBSTITUTE (conj) (conj ExtPos=SCONJ) (*) ;
  SUBSTITUTE @mark @fixed _C1_ ;
} ;

SETPARENT SAFE (SCONJ) TO (-1* SpeakingVerb) ;
WITH (SCONJ @mark) IF (NEGATE c (*)) (NEGATE 1* (*) - BD - (prn) - (prep)) {
SUBSTITUTE @mark @ccomp (*) IF (p SpeakingVerb) ;
SUBSTITUTE @mark @advcl (*) ;
} ;

WITH @appos IF (p (*) LINK p (role:V)) (p (*) LINK sllr (*) LINK 1* _TARGET_) {
  SETCHILD REPEAT (*) TO (sr @conj) ;
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SUBSTITUTE @appos @dislocated (*) ;
} ;

WITH @conj IF (p @obl LINK sllr (*) LINK 1* _TARGET_) (NEGATE c @cc) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SUBSTITUTE @conj @obl (*) ;
} ;

WITH @amod IF (p (*) LINK p (role:V)) (p (*) LINK sllr (*) LINK 1* _TARGET_) {
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SUBSTITUTE @amod @xcomp (*) ;
} ;

SETPARENT (NpCL) TO (p @expl LINK p (advb retag:inrg InrP) OR (prin InrP)) ;
WITH (NpCL) OR (ClCl) OR (VP P-S) IF (p (advb retag:inrg InrP) OR (prin InrP)) {
  UNMAP (*) ;
  MAP $$Relation (*) IF (jC1 $$Relation) ;
  ADD (_) (*) IF (jC1 (_)) ;
  SETPARENT (*) TO (p (*) LINK p (*)) ;
  SETCHILD (*) TO (jC1 (*)) ;
  SETCHILD (*) TO (jC1 (*) LINK c @expl) ;
  SUBSTITUTE Relation @advmod (*) IF (jC1A (advb retag:inrg)) ;
  SUBSTITUTE Relation @obl (*) IF (jC1A (prin)) ;
} ;

SETPARENT REPEAT @conj (NEGATE sr @amod OR @nmod) TO (p @conj + (longlist) LINK p (*)) ;

SETPARENT SAFE (SCONJ quot @advcl) TO (-1* (verb)) ;

SUBSTITUTE @obj @conj Pr IF (pl (Objc)) (c @cc) ;

SETPARENT @acl:relcl TO (p @compound:smixut LINK p ("כל")) ;

SETPARENT (*) - @fixed TO (p @mark LINK p (*)) ;

SETPARENT (*) TO (p @obl:npmod LINK p (*)) ;

SETPARENT @appos (NEGATE sr (*)) TO (p @appos LINK p (*)) ;

SUBSTITUTE @xcomp @advcl (infc) IF (p XcompNoObj) (s @obj) ;

SUBSTITUTE @ccomp @advcl (*) IF (s @obj) (c (SCONJ quot @mark)) ;

SUBSTITUTE @compound:smixut @appos (*) IF (sl @compound:smixut) ;

SUBSTITUTE @case @conj (*) IF (c @acl:relcl) (pl (prep) LINK c @acl:relcl) ;

SUBSTITUTE @case @ccomp $$TextLevel IF (pl SpeakingVerb - $$TextLevel) ;

SUBSTITUTE @obj @appos (prep Np-Appos) IF (p @obj) ;

MAP @advmod (advb) IF (NEGATE c (*)) ;

AFTER-SECTIONS

SETPARENT @advmod TO (pr @conj LINK pA (*) LINK -1* _TARGET_) ;

MAP @cop (vbcp) - (_) ;

MAP @dep (*) - (_) ;

MAP @root (*) ;

WITH @root IF (p (*) LINK p (*)) {
  SUBSTITUTE @root @conj (*) IF (c @cc) ;
  SUBSTITUTE @root @conj (*) IF (sr (*) LINK c @cc) ;
  SUBSTITUTE @root @advcl (verb infc) IF (c @case) ;
  SUBSTITUTE @root @parataxis (*) ;
} ;

SETPARENT (*) (p (>>>)) TO (slll (*)) ;

REMCOHORT (pb) ;
REMCOHORT (cb) ;
REMCOHORT (sb) ;
REMCOHORT (svb) ;
#REMCOHORT (excb) ;
